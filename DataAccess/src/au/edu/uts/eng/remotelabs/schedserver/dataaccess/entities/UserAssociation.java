package au.edu.uts.eng.remotelabs.schedserver.dataaccess.entities;

// Generated 06/01/2010 5:09:20 PM by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * UserAssociation generated by hbm2java
 */
@Entity
@Table(name = "user_association", catalog = "sahara")
public class UserAssociation implements java.io.Serializable
{

    /**
     * 
     */
    private static final long serialVersionUID = -2716114739878208529L;
    private UserAssociationId id;
    private UserClass userClass;
    private User user;

    public UserAssociation()
    {
    }

    public UserAssociation(final UserAssociationId id,
            final UserClass userClass, final User user)
    {
        this.id = id;
        this.userClass = userClass;
        this.user = user;
    }

    @EmbeddedId
    @AttributeOverrides( {
            @AttributeOverride(name = "usersId", column = @Column(name = "users_id", nullable = false)),
            @AttributeOverride(name = "userClassId", column = @Column(name = "user_class_id", nullable = false)) })
    public UserAssociationId getId()
    {
        return this.id;
    }

    public void setId(final UserAssociationId id)
    {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_class_id", nullable = false, insertable = false, updatable = false)
    public UserClass getUserClass()
    {
        return this.userClass;
    }

    public void setUserClass(final UserClass userClass)
    {
        this.userClass = userClass;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "users_id", nullable = false, insertable = false, updatable = false)
    public User getUser()
    {
        return this.user;
    }

    public void setUser(final User user)
    {
        this.user = user;
    }

}

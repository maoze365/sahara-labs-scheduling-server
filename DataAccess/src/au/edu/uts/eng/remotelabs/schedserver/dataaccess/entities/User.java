package au.edu.uts.eng.remotelabs.schedserver.dataaccess.entities;

// Generated 06/01/2010 5:09:20 PM by Hibernate Tools 3.2.5.Beta

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "sahara", uniqueConstraints = @UniqueConstraint(columnNames = {
        "name", "namespace" }))
public class User implements java.io.Serializable
{

    /**
     * 
     */
    private static final long serialVersionUID = -4090859888631269654L;
    private Long id;
    private String name;
    private String namespace;
    private String persona;
    private Set<UserLock> userLocks = new HashSet<UserLock>(0);
    private Set<AcademicPermission> academicPermissions = new HashSet<AcademicPermission>(
            0);
    private Set<UserLock> userLocks_1 = new HashSet<UserLock>(0);
    private Set<UserAssociation> userAssociations = new HashSet<UserAssociation>(
            0);
    private Set<UserAssociation> userAssociations_1 = new HashSet<UserAssociation>(
            0);
    private Set<AcademicPermission> academicPermissions_1 = new HashSet<AcademicPermission>(
            0);
    private Set<Session> sessions = new HashSet<Session>(0);
    private Set<Session> sessions_1 = new HashSet<Session>(0);

    public User()
    {
    }

    public User(final String name, final String namespace, final String persona)
    {
        this.name = name;
        this.namespace = namespace;
        this.persona = persona;
    }

    public User(final String name, final String namespace,
            final String persona, final Set<UserLock> userLocks,
            final Set<AcademicPermission> academicPermissions,
            final Set<UserLock> userLocks_1,
            final Set<UserAssociation> userAssociations,
            final Set<UserAssociation> userAssociations_1,
            final Set<AcademicPermission> academicPermissions_1,
            final Set<Session> sessions, final Set<Session> sessions_1)
    {
        this.name = name;
        this.namespace = namespace;
        this.persona = persona;
        this.userLocks = userLocks;
        this.academicPermissions = academicPermissions;
        this.userLocks_1 = userLocks_1;
        this.userAssociations = userAssociations;
        this.userAssociations_1 = userAssociations_1;
        this.academicPermissions_1 = academicPermissions_1;
        this.sessions = sessions;
        this.sessions_1 = sessions_1;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId()
    {
        return this.id;
    }

    public void setId(final Long id)
    {
        this.id = id;
    }

    @Column(name = "name", nullable = false, length = 50)
    public String getName()
    {
        return this.name;
    }

    public void setName(final String name)
    {
        this.name = name;
    }

    @Column(name = "namespace", nullable = false, length = 50)
    public String getNamespace()
    {
        return this.namespace;
    }

    public void setNamespace(final String namespace)
    {
        this.namespace = namespace;
    }

    @Column(name = "persona", nullable = false, length = 8)
    public String getPersona()
    {
        return this.persona;
    }

    public void setPersona(final String persona)
    {
        this.persona = persona;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserLock> getUserLocks()
    {
        return this.userLocks;
    }

    public void setUserLocks(final Set<UserLock> userLocks)
    {
        this.userLocks = userLocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<AcademicPermission> getAcademicPermissions()
    {
        return this.academicPermissions;
    }

    public void setAcademicPermissions(
            final Set<AcademicPermission> academicPermissions)
    {
        this.academicPermissions = academicPermissions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserLock> getUserLocks_1()
    {
        return this.userLocks_1;
    }

    public void setUserLocks_1(final Set<UserLock> userLocks_1)
    {
        this.userLocks_1 = userLocks_1;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserAssociation> getUserAssociations()
    {
        return this.userAssociations;
    }

    public void setUserAssociations(final Set<UserAssociation> userAssociations)
    {
        this.userAssociations = userAssociations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserAssociation> getUserAssociations_1()
    {
        return this.userAssociations_1;
    }

    public void setUserAssociations_1(
            final Set<UserAssociation> userAssociations_1)
    {
        this.userAssociations_1 = userAssociations_1;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<AcademicPermission> getAcademicPermissions_1()
    {
        return this.academicPermissions_1;
    }

    public void setAcademicPermissions_1(
            final Set<AcademicPermission> academicPermissions_1)
    {
        this.academicPermissions_1 = academicPermissions_1;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Session> getSessions()
    {
        return this.sessions;
    }

    public void setSessions(final Set<Session> sessions)
    {
        this.sessions = sessions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Session> getSessions_1()
    {
        return this.sessions_1;
    }

    public void setSessions_1(final Set<Session> sessions_1)
    {
        this.sessions_1 = sessions_1;
    }

}

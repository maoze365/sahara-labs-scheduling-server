package au.edu.uts.eng.remotelabs.schedserver.dataaccess.entities;

// Generated 06/01/2010 5:09:20 PM by Hibernate Tools 3.2.5.Beta

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ResourcePermission generated by hbm2java
 */
@Entity
@Table(name = "resource_permission")
public class ResourcePermission implements java.io.Serializable
{

    /**
     * 
     */
    private static final long serialVersionUID = -2292524825260205119L;
    private Long id;
    private RigType rigType;
    private UserClass userClass;
    private Rig rig;
    private RequestCapabilities requestCapabilities;
    private String type;
    private int sessionDuration;
    private int extensionDuration;
    private short allowedExtensions;
    private int queueActivityTimeout;
    private int sessionActivityTimeout;
    private Set<UserLock> userLocks = new HashSet<UserLock>(0);
    private Set<Session> sessionsForResourcePermissionId = new HashSet<Session>(
            0);
    private Set<UserLock> userLocks_1 = new HashSet<UserLock>(0);
    private Set<Session> sessionsForResourcePermissionId_1 = new HashSet<Session>(
            0);

    public ResourcePermission()
    {
    }

    public ResourcePermission(final UserClass userClass, final String type,
            final int sessionDuration, final int extensionDuration,
            final short allowedExtensions, final int queueActivityTimeout,
            final int sessionActivityTimeout)
    {
        this.userClass = userClass;
        this.type = type;
        this.sessionDuration = sessionDuration;
        this.extensionDuration = extensionDuration;
        this.allowedExtensions = allowedExtensions;
        this.queueActivityTimeout = queueActivityTimeout;
        this.sessionActivityTimeout = sessionActivityTimeout;
    }

    public ResourcePermission(final RigType rigType, final UserClass userClass,
            final Rig rig, final RequestCapabilities requestCapabilities,
            final String type, final int sessionDuration,
            final int extensionDuration, final short allowedExtensions,
            final int queueActivityTimeout, final int sessionActivityTimeout,
            final Set<UserLock> userLocks,
            final Set<Session> sessionsForResourcePermissionId,
            final Set<UserLock> userLocks_1,
            final Set<Session> sessionsForResourcePermissionId_1)
    {
        this.rigType = rigType;
        this.userClass = userClass;
        this.rig = rig;
        this.requestCapabilities = requestCapabilities;
        this.type = type;
        this.sessionDuration = sessionDuration;
        this.extensionDuration = extensionDuration;
        this.allowedExtensions = allowedExtensions;
        this.queueActivityTimeout = queueActivityTimeout;
        this.sessionActivityTimeout = sessionActivityTimeout;
        this.userLocks = userLocks;
        this.sessionsForResourcePermissionId = sessionsForResourcePermissionId;
        this.userLocks_1 = userLocks_1;
        this.sessionsForResourcePermissionId_1 = sessionsForResourcePermissionId_1;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId()
    {
        return this.id;
    }

    public void setId(final Long id)
    {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "type_id")
    public RigType getRigType()
    {
        return this.rigType;
    }

    public void setRigType(final RigType rigType)
    {
        this.rigType = rigType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_class_id", nullable = false)
    public UserClass getUserClass()
    {
        return this.userClass;
    }

    public void setUserClass(final UserClass userClass)
    {
        this.userClass = userClass;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "name_id")
    public Rig getRig()
    {
        return this.rig;
    }

    public void setRig(final Rig rig)
    {
        this.rig = rig;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "request_caps_id")
    public RequestCapabilities getRequestCapabilities()
    {
        return this.requestCapabilities;
    }

    public void setRequestCapabilities(
            final RequestCapabilities requestCapabilities)
    {
        this.requestCapabilities = requestCapabilities;
    }

    @Column(name = "type", nullable = false, length = 5)
    public String getType()
    {
        return this.type;
    }

    public void setType(final String type)
    {
        this.type = type;
    }

    @Column(name = "session_duration", nullable = false)
    public int getSessionDuration()
    {
        return this.sessionDuration;
    }

    public void setSessionDuration(final int sessionDuration)
    {
        this.sessionDuration = sessionDuration;
    }

    @Column(name = "extension_duration", nullable = false)
    public int getExtensionDuration()
    {
        return this.extensionDuration;
    }

    public void setExtensionDuration(final int extensionDuration)
    {
        this.extensionDuration = extensionDuration;
    }

    @Column(name = "allowed_extensions", nullable = false)
    public short getAllowedExtensions()
    {
        return this.allowedExtensions;
    }

    public void setAllowedExtensions(final short allowedExtensions)
    {
        this.allowedExtensions = allowedExtensions;
    }

    @Column(name = "queue_activity_timeout", nullable = false)
    public int getQueueActivityTimeout()
    {
        return this.queueActivityTimeout;
    }

    public void setQueueActivityTimeout(final int queueActivityTimeout)
    {
        this.queueActivityTimeout = queueActivityTimeout;
    }

    @Column(name = "session_activity_timeout", nullable = false)
    public int getSessionActivityTimeout()
    {
        return this.sessionActivityTimeout;
    }

    public void setSessionActivityTimeout(final int sessionActivityTimeout)
    {
        this.sessionActivityTimeout = sessionActivityTimeout;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "resourcePermission")
    public Set<UserLock> getUserLocks()
    {
        return this.userLocks;
    }

    public void setUserLocks(final Set<UserLock> userLocks)
    {
        this.userLocks = userLocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "resourcePermissionByResourcePermissionId")
    public Set<Session> getSessionsForResourcePermissionId()
    {
        return this.sessionsForResourcePermissionId;
    }

    public void setSessionsForResourcePermissionId(
            final Set<Session> sessionsForResourcePermissionId)
    {
        this.sessionsForResourcePermissionId = sessionsForResourcePermissionId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "resourcePermission")
    public Set<UserLock> getUserLocks_1()
    {
        return this.userLocks_1;
    }

    public void setUserLocks_1(final Set<UserLock> userLocks_1)
    {
        this.userLocks_1 = userLocks_1;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "resourcePermissionByResourcePermissionId")
    public Set<Session> getSessionsForResourcePermissionId_1()
    {
        return this.sessionsForResourcePermissionId_1;
    }

    public void setSessionsForResourcePermissionId_1(
            final Set<Session> sessionsForResourcePermissionId_1)
    {
        this.sessionsForResourcePermissionId_1 = sessionsForResourcePermissionId_1;
    }

}
